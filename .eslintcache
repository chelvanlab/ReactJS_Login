[{"/home/chelvan/Desktop/myfirstreact/src/index.js":"1","/home/chelvan/Desktop/myfirstreact/src/App.js":"2","/home/chelvan/Desktop/myfirstreact/src/reportWebVitals.js":"3","/home/chelvan/Desktop/myfirstreact/src/Login.js":"4"},{"size":505,"mtime":1609575557259,"results":"5","hashOfConfig":"6"},{"size":97,"mtime":1609560833714,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1609486687419,"results":"8","hashOfConfig":"6"},{"size":1951,"mtime":1609575495499,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ahxd0e",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"/home/chelvan/Desktop/myfirstreact/src/index.js",[],["21","22"],"/home/chelvan/Desktop/myfirstreact/src/App.js",[],["23","24"],"/home/chelvan/Desktop/myfirstreact/src/reportWebVitals.js",[],"/home/chelvan/Desktop/myfirstreact/src/Login.js",["25","26","27"],"import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './components/Login/login.css'\n\nfunction Login(props) {\n  const username = useFormInput('');\n  const password = useFormInput('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // handle button click of login form\n  const handleLogin = () => {\n    console.log(\"okkk\");\n  }\n\n  return (\n\n    <div class=\"container login-container\">\n      <div class=\"row\">\n        <div class=\"col-md-6 ads\">\n          <h1><span id=\"fl\">Company</span><span id=\"sl\">Name</span></h1>\n        </div>\n        <div class=\"col-md-6 login-form\">\n          {/* <div class=\"profile-img\">\n        <img> src=</img>\n      </div> */}\n          <h3>Login</h3>\n          <form>\n            <div class=\"form-group\">\n            <input class=\"form-control\" placeholder=\"yourmail@example.com\" type=\"text\" {...username} autoComplete=\"new-mail\" />\n            </div>\n            <div class=\"form-group\">\n            <input class=\"form-control\" placeholder=\"Password\" type=\"password\" {...password} autoComplete=\"new-password\" />\n            </div>\n            <div class=\"form-group\">\n            {error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\n                    <input class=\"btn btn-primary btn-lg btn-block\" type=\"button\" value={loading ? 'Loading...' : 'Login'} onClick={handleLogin} disabled={loading} />\n          </div>\n          <div class=\"form-group forget-password\">\n                <p>If you are a new user please</p>\n                <a href=\"#\">SignUp</a>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst useFormInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  }\n  return {\n    value,\n    onChange: handleChange\n  }\n}\n\nexport default Login;",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"28","replacedBy":"32"},{"ruleId":"30","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":9,"column":17,"nodeType":"36","messageId":"37","endLine":9,"endColumn":25},{"ruleId":"34","severity":1,"message":"38","line":10,"column":19,"nodeType":"36","messageId":"37","endLine":10,"endColumn":29},{"ruleId":"39","severity":1,"message":"40","line":42,"column":17,"nodeType":"41","endLine":42,"endColumn":29},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],["42"],["43"],"no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]